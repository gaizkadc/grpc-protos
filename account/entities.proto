/*
 * Copyright (C) 2019 Nalej - All Rights Reserved
 */
syntax = "proto3";

package account;
option go_package = "github.com/nalej/grpc-account-go";


// AccountState enumeration defining the state of a project
enum AccountState {
    // ACTIVE. When the account is in this state, the user can login and operate in the account
    ACTIVE = 0;
    // DEACTIVATED. When the account is in this state, the user see the account
    // but he can not login neither operate in the account
    DEACTIVATED = 1;
}

// AccountBillingInfo with the billing information of an account
message AccountBillingInfo {
    // AccountId with the account identifier
    string account_id = 1;
    // FullName with the name of a person that receives the invoice
    string full_name = 2;
    // CompanyName with the name of the company
    string company_name = 3;
    // Address with the address of the company
    string address = 4;
    // AdditionalInfo with more information of the company
    string additional_info = 5;
}

// Account model with the information related to a given account
message Account {
    // AccountId with the account identifier. This value is created by the system
    string account_id = 1;
    // Name of the account. The name of the account must be unique
    string name = 2;
    // Created timestamp
    int64 created = 3;
    // BillingInfo with the billing information of the account
    AccountBillingInfo billing_info= 4;
    // State with the state of the account
    AccountState state = 5;
    // StateInfo in case the account is in a non active state,
    // it contains the information about the reason for this state
    string state_info = 6;
}

// AccountId with the account identifier
message AccountId {
    string account_id = 1;
}

// AddAccountRequest structure to add new account
// by default the account will be created ACTIVE
message AddAccountRequest {
    // Name with the name of the account
    string name = 1;
    // FullName with the name of a person that receives the invoice
    string full_name = 2;
    // CompanyName with the name of the company
    string company_name = 3;
    // Address with the address of the company
    string address = 4;
    // AdditionalInfo with more information of the company
    string additional_info = 5;
}

// AccountList with a list of accounts
message AccountList {
    repeated Account accounts = 1;
}

// UpdateAccountRequest message to update the account information
message UpdateAccountRequest {
    // AccountId with the account identifier.
    string account_id = 1;
    // UpdateName flag to indicate that Names must be updated
    bool update_name = 2;
    // Name with the account new name. The name can be modified, but it must be unique
    string name = 3;
    // UpdateState flag to indicate that the State of the account must be updated
    bool update_state = 4;
    // State with the new State of the account
    AccountState state = 5;
    // UpdateStateInfo flag to indicate that the State info must be updated
    bool update_state_info = 6;
    // StateInfo with the new state info of the account
    string state_info = 7;

}

message UpdateAccountBillingInfoRequest{
    // AccountId with the account identifier.
    string account_id = 1;
    // UpdateFullName flag to indicate that FullName must be updated
    bool update_full_name = 2;
    // FullName with the account new full name
    string full_name = 3;
    // UpdateCompanyName flag to indicate that CompanyName must be updated
    bool update_company_name = 4;
    // CompanyName with the account new company name
    string company_name = 5;
    // UpdateAddress flag to indicate that Address must be updated
    bool update_address = 6;
    // Address with the new address of the account billing information
    string address = 7;
    // UpdateAdditionalInfo flag to indicate that the additional information must be updated
    bool update_additional_info = 8;
    // AdditionalInfo with the new addition info of the account billing information
    string additional_info = 9;
}