/*
 * Copyright 2018 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package installer;
option go_package = "github.com/nalej/grpc-installer-go";

import "infrastructure/entities.proto";

// InstallProgress enumeration with the different states of an install process.
enum InstallProgress {
    // INIT represents the initial state of the workflow.
    INIT = 0;
    // REGISTERED represents a install request that is on the queue.
    REGISTERED = 1;
    // IN_PROGRESS represents a install that is being processed.
    IN_PROGRESS = 2;
    // ERROR represents a install that failed.
    ERROR = 3;
    // FINISHED represents a sucessful install.
    FINISHED = 4;
}

// InstallRequest message used to specify the cluster to be installed.
message InstallRequest {
    // InstallId for tracking the progress of the install.
    string install_id = 1;
    // OrganizationId with the organization identifier.
    string organization_id = 2;
    // ClusterId with the cluster identifier.
    string cluster_id = 3;
    // Type of cluster.
    infrastructure.ClusterType cluster_type = 4;
    // KubeConfig contains the required data to connect to a Kubernetes cluster in case it is already installed.
    string kube_config = 5;
    // PrivateKey contains the SSH private key required for the install.
    string private_key = 6;
    // Nodes contains the list of IP addresses to be installed.
    repeated string nodes = 7;
}

message InstallId {
    // InstallId associated with the remove request.
    string install_id = 1;
}

// RemoveInstallRequest to remove all information related to a given install process.
message RemoveInstallRequest {
    // InstallId associated with the remove request.
    string install_id = 1;
}

// InstallResponse message with the progress of the install.
message InstallResponse {
    // InstallId associated with the information.
    string install_id = 1;
    // State of the install.
    InstallProgress state = 2;
    // ElapsedTime since the request was sent.
    int64 elapsed_time = 3;
    // Error message in case the install failed.
    string error = 4;
}
