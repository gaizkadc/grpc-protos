/*
 * Copyright (C) 2018 Nalej - All Rights Reserved
 */

syntax = "proto3";

package provisioner;
option go_package = "github.com/nalej/grpc-provisioner-go";

import "infrastructure/entities.proto";
import "installer/entities.proto";

//
// Provision
//

// ProvisionClusterRequest message with the informatnion required to create a new cluster in a selected infrastructure provider.
message ProvisionClusterRequest {
    // RequestId generated by the infrastructure-manager component to track the provisioning operation.
    string request_id = 1;
    // OrganizationId with the organization identifier.
    string organization_id = 2;
    // ClusterId with the cluster identifier.
    string cluster_id = 3;
    // Type of cluster.
    infrastructure.ClusterType cluster_type = 4;
    // ClusterName with the name of the cluster to be created
    string cluster_name = 5;
    // Kubernetes version with the version of Kubernetes to be installed. This version may not be available on all
    // providers.
    string kubernetes_version = 6;
    // NumNodes with the number of nodes of the cluster to be created.
    int64 num_nodes = 7;
    // NodeType with the type of node to be used. This value must exist in the target infrastructure provider.
    string node_type = 8;
    // Zone where the cluster will be provisioned. This value must exist in the target infrastructure provider.
    string zone = 9;
    // IsManagementCluster to determine if the provisioning is for a management or application cluster.
    bool is_management_cluster = 10;
    // TargetPlatform with the infrastructure provider to be used.
    installer.Platform target_platform = 11;
    // AzureCredentials with the credentials required to provision a cluster in Azure.
    AzureCredentials azure_credentials = 12;
    // AzureOptions with the provisioning specific options.
    AzureProvisioningOptions azure_options = 13;
}

// AzureProvisioningOptions with the specific options for Azure provisioning operations.
message AzureProvisioningOptions{
    // ResourceGroup where the cluster will be provisioned.
    string resource_group = 1;
}

// AzureCredentials contains the credentials required to perform provisioning operations in Azure.
// To obtain this credentials use az ad sp create-for-rbac --sdk-auth
message AzureCredentials {
    string client_id = 1;
    string client_secret = 2;
    string subscription_id = 3;
    string tenant_id = 4;
    string active_directory_endpoint_url = 5;
    string resource_manager_endpoint_url = 6;
    string active_directory_graph_resource_id = 7;
    string sql_management_endpoint_url = 8;
    string gallery_endpoint_url = 9;
    string management_endpoint_url = 10;
}

// TODO Create a TaskProgress enum in commons.
// ProvisionProgress enumeration with the different states of a provisioning process.
enum ProvisionProgress {
    // INIT represents the initial state of the workflow.
    INIT = 0;
    // REGISTERED represents a provisioning request that is on the queue.
    REGISTERED = 1;
    // IN_PROGRESS represents a provisioning that is being processed.
    IN_PROGRESS = 2;
    // ERROR represents a provision that failed.
    ERROR = 3;
    // FINISHED represents a successful provisioning.
    FINISHED = 4;
}

// ProvisionClusterResponse message with the progress of the provisioning.
message ProvisionClusterResponse {
    // RequestId associated with the information.
    string request_id = 1;
    // State of the provisioning.
    ProvisionProgress state = 2;
    // ElapsedTime since the request was sent.
    int64 elapsed_time = 3;
    // Error message in case the install failed.
    string error = 4;
    // RawKubeConfig with the raw contents of the resulting kube config file.
    string raw_kube_config = 5;
    // StaticIPAddresses with the generated addresses.
    installer.StaticIPAddresses static_ip_addresses = 6;
}

//
// Decomission
//

// DecomissionClusterRequest message with the information required to decomission a provisioned cluster.
message DecomissionClusterRequest{
    // RequestId generated by the infrastructure-manager component to track the provisioning operation.
    string request_id = 1;
    // OrganizationId with the organization identifier.
    string organization_id = 2;
    // ClusterId with the cluster identifier.
    string cluster_id = 3;
    // Type of cluster.
    infrastructure.ClusterType cluster_type = 4;
    // TargetPlatform with the infrastructure provider to be used.
    installer.Platform target_platform = 5;
    // AzureCredentials with the credentials required to decomission a cluster in Azure.
    AzureCredentials azure_credentials = 6;
}

// DecomissionClusterResponse with the progress of a decomission operation.
message DecomissionClusterResponse{
    // RequestId associated with the information.
    string request_id = 1;
    // State of the provisioning.
    ProvisionProgress state = 2;
    // ElapsedTime since the request was sent.
    int64 elapsed_time = 3;
    // Error message in case the install failed.
    string error = 4;
}

//
// Scale
//

// ScaleClusterRequest message with the information required to dynamically change the number of nodes of a cluster.
message ScaleClusterRequest {
    // RequestId generated by the infrastructure-manager component to track the provisioning operation.
    string request_id = 1;
    // OrganizationId with the organization identifier.
    string organization_id = 2;
    // ClusterId with the cluster identifier.
    string cluster_id = 3;
    // Type of cluster.
    infrastructure.ClusterType cluster_type = 4;
    // NumNodes with the number of nodes of the cluster to be matched.
    int64 num_nodes = 5;
    // NodeType with the type of node to be used. This value must exist in the target infrastructure provider.
    string node_type = 6;
    // Zone where the cluster will be provisioned. This value must exist in the target infrastructure provider.
    string zone = 7;
    // TargetPlatform with the infrastructure provider to be used.
    installer.Platform target_platform = 9;
    // AzureCredentials with the credentials required to provision a cluster in Azure.
    AzureCredentials azure_credentials = 10;
}

// ScaleClusterResponse with the progress of a scale operation.
message ScaleClusterResponse {
    // RequestId associated with the information.
    string request_id = 1;
    // State of the provisioning.
    ProvisionProgress state = 2;
    // ElapsedTime since the request was sent.
    int64 elapsed_time = 3;
    // Error message in case the install failed.
    string error = 4;
}