/*
 * Copyright 2018 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package organization;
option go_package = "github.com/nalej/grpc-organization-go";

// AccessPrimitives define a set of capabilities a role may access.
enum AccessPrimitive {
    // Access to all organization related functionality.
    ORG = 0;
    // Access to all applications related functionality.
    APPS = 1;
    // Access to all resources related functionality.
    RESOURCES = 2;
    // Access to the profile information.
    PROFILE = 3;
}

// Role defines a role for users of an organization with the associated capabilities
message Role {
    string organization_id = 1;
    string role_id = 2;
    string name = 3;
    repeated AccessPrimitive primitives = 4;
}

// User model the information available regarding a User of an organization
message User {
    string organization_id = 1;
    string email = 2;
    string password = 3;
    string photo_url = 4;
    int64 member_since = 5;
    Role role = 6;
}

// UserId with the email identifying a user.
message UserId {
    string organization_id = 1;
    string email = 2;
}

// AddUserRequest message with the information required to add a user to the platform.
message AddUserRequest {
    string request_id = 1;
    string organization_id = 2;
    string email = 3;
    string password = 4;
    string photo_url = 5;
    Role role = 6;
}

// RemoveUserRequest message with the information required to remove a user from the platform.
message RemoveUserRequest {
    string request_id = 1;
    string organization_id = 2;
    string email = 3;
}

// Organization model with the information related to a given organization
message Organization {
    string organization_id = 1;
    string name = 2;
    string logo_url = 3;
    int64 created = 4;
}

message AddOrganizationRequest {
    string request_id = 1;
    string name = 2;
}

message UpdateOrganizationRequest {
    string request_id = 1;
    string organization_id = 2;
    bytes photo = 3;
}

// OrganizationId message with the organization identifier.
message OrganizationId {
    string organization_id = 1;
}

// UserList message with a list of users.
message UserList {
    repeated User users = 1;
}

