/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package organization;
option go_package = "github.com/nalej/grpc-organization-go";

// Organization model with the information related to a given organization
message Organization {
    string organization_id = 1;
    string name = 2;
    string full_address = 3;
    string city = 4;
    string state = 5;
    string country = 6;
    string zip_code = 7;
    string photo_base64 = 8;
    string email = 9;
    int64 created = 10;
}

message AddOrganizationRequest {
    string name = 1;
    string full_address = 2;
    string city = 3;
    string state = 4;
    string country = 5;
    string zip_code = 6;
    string photo_base64 = 7;
    string email = 8;
}

message UpdateOrganizationRequest {
    string organization_id = 1;
    bool   update_name = 2;
    string name = 3;
    bool   update_full_address = 4;
    string full_address = 5;
    bool   update_city = 6;
    string city = 7;
    bool   update_state = 8;
    string state = 9;
    bool   update_country = 10;
    string country = 11;
    bool   update_zip_code = 12;
    string zip_code = 13;
    bool   update_photo = 14;
    string photo_base64 = 15;
    bool   update_email = 16;
    string email = 17;
}

// OrganizationId message with the organization identifier.
message OrganizationId {
    string organization_id = 1;
}

message OrganizationList {
    repeated Organization organizations = 1;
}

// OrganizationSetting message with a setting defined for an organization
message OrganizationSetting {
    // OrganizationId organization identifier
    string organization_id = 1;
    // Key of the setting
    string key = 2;
    // Value of the key
    string value = 3;
    // Description of the setting
    string description = 4;
}

// OrganizationSettingList with a list of organization settings
message OrganizationSettingList {
    repeated OrganizationSetting settings = 1;
}

// AllowedSettingKey is an enum to define the allowed organization Settings
// This enum is not used in any internal grpc-message,
// The keys of the organization setting must be strings called as the values ​​of this enumerated
// This allows to the components to use and validate that the keys are correct
enum AllowedSettingKey {
    // Default Storage Size is the default storage size when it is not filled in a descriptor
    DEFAULT_STORAGE_SIZE = 0;
}

// SettingKey with the key of an OrganizationSetting
message SettingKey {
    string organization_id = 1;
    string key = 2;
}

// AddSettingRequest message to add a new setting
message AddSettingRequest {
    // OrganizationId organization identifier
    string organization_id = 1;
    // Key of the setting
    string key = 2;
    // Value of the key
    string value = 3;
    // Description of the setting (is no required)
    string description = 4;
}

message UpdateSettingRequest {
    // OrganizationId organization identifier
    string organization_id = 1;
    // Key of the setting
    string key = 2;
    // UpdateValue flag to indicate if the value will be updated
    bool update_value = 3;
    // Value of the key
    string value = 4;
    // UpdateDescription flag to indicate if the description will be updated
    bool update_description = 5;
    // Description of the setting (is no required)
    string description = 6;
}
