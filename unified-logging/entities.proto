/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package unified_logging;
option go_package = "github.com/nalej/grpc-unified-logging-go";
import "google/protobuf/timestamp.proto";

// SortOrder is used to define the ordering of search results
enum SortOrder {
    // Ascending order
    ASC = 0;
    // Descending order
    DESC = 1;
}

// SearchRequest message with the query to be resolved.
message SearchRequest{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 2;
    // ServiceGroupInstanceId with the target group instance. If not set, the response will contain all groups in
    // the application instance.
    string service_group_instance_id = 3;
    // MsgQueryFilter contains a text query on the log entry.
    string msg_query_filter = 4;
    // From specifies the minimal timestamp of the expected entries.
    google.protobuf.Timestamp from = 5;
    // To specifies the maximum timestamp of the expected entries.
    google.protobuf.Timestamp to = 6;
    // Order specifies the sort order of the entries (on timestamp)
    SortOrder order = 7;
}

// ExpirationRequest to remove entries from the index.
message ExpirationRequest{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 2;
}

// LogResponse message containing the results of a query.
message LogResponse{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 2;
    // From with the minimal timestamp of the returned results.
    google.protobuf.Timestamp from = 3;
    // To with the maximum timestamp of the returned results.
    google.protobuf.Timestamp to = 4;
    // Entries with the captured log entries.
    repeated LogEntry entries = 5;
}

// LogEntry containing a single line of text captured from a given log.
message LogEntry {
    // Timestamp of the entry.
    google.protobuf.Timestamp timestamp = 1;
    // Msg with the captured content.
    string msg = 2;
}
