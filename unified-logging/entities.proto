/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package unified_logging;
option go_package = "github.com/nalej/grpc-unified-logging-go";
import "google/protobuf/timestamp.proto";


// SearchRequest message with the query to be resolved.
message SearchRequest{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // AppDescriptorId with the descriptor identifier
    string app_descriptor_id = 2;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 3;
    // ServiceGroupId with the service group identifier
    string service_group_id = 4;
    // ServiceGroupInstanceId with the target group instance. If not set, the response will contain all groups in
    // the application instance.
    string service_group_instance_id = 5;
    // ServiceId with the service identifier
    string service_id = 6;
    // ServiceInstanceId with the service instance identifier
    string service_instance_id = 7;
    // MsgQueryFilter contains a text query on the log entry.
    string msg_query_filter = 8;
    // From specifies the minimal timestamp of the expected entries.
    int64 from = 9;
    // To specifies the maximum timestamp of the expected entries.
    int64 to = 10;
    // NFirst is a flag that identifies whether the user expects to receive the first n results or not
    // if the search must be sorted ascending or descending
    bool n_first = 11;

}

// ExpirationRequest to remove entries from the index.
message ExpirationRequest{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 2;
}

// RangeExpirationRequest to remove entries from the index.
message RangeExpirationRequest{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 2;
}


message RangeExpirationRequest{
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // To with the maximum timestamp of the expired logs.
    int64 to = 2;
}

message ExpirationListRequest{
    RangeExpirationRequest expiration_requests = 1;
}

// LogResponseList message with a list of LogResponses
message LogResponseList {
    // OrganizationId with the organization identifier.
    string organization_id = 1;
    // From with the minimal timestamp of the returned results.
    int64 from = 2;
    // To with the maximum timestamp of the returned results.
    int64 to = 3;
    // Responses with a list of log responses
    repeated LogResponse responses = 4;
    // FailedClusterIds with a list og cluster identifiers whose call failed
    repeated string failed_cluster_ids = 5;
}

// LogResponse message containing the results of a query.
message LogResponse{
    // AppDescriptorId with the descriptor identifier
    string app_descriptor_id = 1;
    // AppDescriptorName with the name of the descriptor
    string app_descriptor_name = 2;
    // AppInstanceId with the identifier of the target application instance.
    string app_instance_id = 3;
    // AppInstanceName with the name of the instance
    string app_instance_name = 4;
    // ServiceGroupId with the service group identifier
    string service_group_id = 5;
    // ServiceGroupName with the name of the service group
    string service_group_name = 6;
    // ServiceGroupInstanceId with the service group instance identifier
    string service_group_instance_id = 7;
    // ServiceId with the service identifier
    string service_id = 8;
    // ServiceName with the name of the service
    string service_name = 9;
    // ServiceInstanceId with the service instance identifier
    string service_instance_id = 10;
    // Entries with the captured log entries.
    repeated LogEntry entries = 11;
}

// LogEntry containing a single line of text captured from a given log.
message LogEntry {
    // Timestamp of the entry.
    int64 timestamp = 1;
    // Msg with the captured content.
    string msg = 2;
}
