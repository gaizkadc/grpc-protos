/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package application_network;
option go_package = "github.com/nalej/grpc-application-network-go";

import "application-network/entities.proto";
import "application/entities.proto";
import "common/entities.proto";
import "organization/entities.proto";

service ApplicationNetwork {

    // AddConnection adds a new connection between one outbound and one inbound
    rpc AddConnection (AddConnectionRequest) returns (ConnectionInstance) {}
    // ExistsConnection checks if a connection exits
    rpc ExistsConnection (ConnectionInstanceId) returns (common.Exists) {}
    // GetConnection retrieves a connection using its composite PK
    rpc GetConnection (ConnectionInstanceId) returns (ConnectionInstance) {}
    // GetConnectionByZtNetworkId retrieves a connection using its ztNetwork id
    rpc GetConnectionByZtNetworkId (ZTNetworkId) returns (ConnectionInstance) {}
    // UpdateConnection updates an existing connection
    rpc UpdateConnection (UpdateConnectionRequest) returns (common.Success) {}
    // RemoveConnection removes a connection
    rpc RemoveConnection (RemoveConnectionRequest) returns (common.Success) {}
    // ListConnections retrieves a list all the established connections of an organization
    rpc ListConnections(organization.OrganizationId) returns (ConnectionInstanceList) {}
    // ListInboundConnections retrieves a list with all the connections where the appInstanceId is the target
    rpc ListInboundConnections(application.AppInstanceId)returns (ConnectionInstanceList) {}
    // ListOutboundConnections retrieves a list with all the connections where the appInstanceId is the source
    rpc ListOutboundConnections(application.AppInstanceId)returns (ConnectionInstanceList) {}


    // AddZTNetworkConnection adds a new zt Connection (one per an inbound and one per the inbound)
    rpc AddZTNetworkConnection (ZTNetworkConnection) returns (ZTNetworkConnection) {}
    // ListZTNetworkConnection lists the connections in one zt network (one inbound and one outbound)
    rpc ListZTNetworkConnection (ZTNetworkId) returns (ZTNetworkConnectionList) {}
    // UpdateZTNetworkConnection updates an existing zt connection
    rpc UpdateZTNetworkConnection (UpdateZTNetworkConnectionRequest) returns (common.Success) {}
    // RemoveZTNetworkConnection removes the ztNetworkConnection
    rpc RemoveZTNetworkConnection (ZTNetworkConnectionId) returns (common.Success) {}
    // RemoveZTNetworkConnectionByNetworkId removes the ztNetworkConnection (all the inbounds and the outbounds)
    rpc RemoveZTNetworkConnectionByNetworkId (ZTNetworkId) returns (common.Success) {}
}