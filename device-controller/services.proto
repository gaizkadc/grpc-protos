/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package device_controller;
option go_package = "github.com/nalej/grpc-device-controller-go";

import "common/entities.proto";
import "device-controller/entities.proto";
import "google/api/annotations.proto";

// Ping operations
service Connection {

    // Ping is an operation triggered by the SDK
    rpc Ping (common.Empty) returns (common.Success) {
        option (google.api.http) = {
            get: "/v0/ping"
        };
    }

    // RegisterLatency Operation that is called by the SDK to inform the target cluster of the last latency measurement
    rpc RegisterLatency (RegisterLatencyRequest) returns (RegisterLatencyResult) {
        option (google.api.http) = {
            post: "/v0/registerlatency"
            body: "*"
        };
    }
    // SelectCluster operation to select the best latency in the list
    rpc SelectCluster(SelectClusterRequest) returns (SelectedCluster) {
        option (google.api.http) = {
            post: "/v0/selectcluster"
            body: "*"
        };
    }

}