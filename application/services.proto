/*
 * Copyright 2018 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package application;
option go_package = "github.com/nalej/grpc-application-go";

import "application/entities.proto";
import "organization/entities.proto";
import "common/entities.proto";

service Applications {
    // AddAppDescriptor adds a new application descriptor to a given organization.
    rpc AddAppDescriptor(AddAppDescriptorRequest) returns (AppDescriptor){}
    // GetAppDescriptors retrieves a list of application descriptors.
    rpc GetAppDescriptors(organization.OrganizationId) returns (AppDescriptorList){}
    // GetAppDescriptor retrieves a given application descriptor.
    rpc GetAppDescriptor(AppDescriptorId) returns (AppDescriptor) {}

    // AddAppInstance adds a new application instance to a given organization.
    rpc AddAppInstance(AddAppInstanceRequest) returns (AppInstance){}
    // GetAppInstances retieves a list of application instances.
    rpc GetAppInstances(organization.OrganizationId) returns (AppInstanceList){}
    // GetAppInstance retrieves a given application instance.
    rpc GetAppInstance(AppInstanceId) returns (AppInstance) {}
    // UpdateAppStatus updates the status of an application instance.
    rpc UpdateAppStatus(UpdateAppStatusRequest) returns (common.Success){}
    // UpdateServiceStatus updates the status of an application instance service.
    rpc UpdateServiceStatus(UpdateServiceStatusRequest) returns(common.Success){}
}
