/*
 * Copyright (C) 2019 Nalej Group - All Rights Reserved
 */

syntax = "proto3";

package monitoring;
option go_package = "github.com/nalej/grpc-monitoring-go";

import "monitoring/entities.proto";

// Coordinator service with the operations offered by the monitoring coordinator.
service MonitoringManager {
    // Retrieve a summary of high level cluster resource availability
    rpc GetClusterSummary(ClusterSummaryRequest) returns(ClusterSummary) {}
    // Retrieve statistics on cluster with respect to platform resources
    rpc GetClusterStats(ClusterStatsRequest) returns(ClusterStats) {}
    // Execute a query directly on the monitoring storage backend
    rpc Query(QueryRequest) returns(QueryResponse) {}
}

// Slave services for quering monitoring information on a specific cluster
// The request messages are reused from the Coordinator. The organization ID
// and cluster ID can either be blank, or must match the current cluster.
service MetricsCollector {
    // Retrieve a summary of high level cluster resource availability
    rpc GetClusterSummary(ClusterSummaryRequest) returns(ClusterSummary) {}
    // Retrieve statistics on cluster with respect to platform resources
    rpc GetClusterStats(ClusterStatsRequest) returns(ClusterStats) {}
    // Execute a query directly on the monitoring storage backend
    rpc Query(QueryRequest) returns(QueryResponse) {}
}
