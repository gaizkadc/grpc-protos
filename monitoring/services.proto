/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package monitoring;
option go_package = "github.com/nalej/grpc-monitoring-go";

import "monitoring/entities.proto";
import "inventory/entities.proto";
import "common/entities.proto";
import "google/api/httpbody.proto";
import "google/api/annotations.proto";

// MonitoringManager Coordinator service with the operations offered by the monitoring coordinator.
service MonitoringManager {
    // GetClusterSummary Retrieve a summary of high level cluster resource availability
    rpc GetClusterSummary (ClusterSummaryRequest) returns (ClusterSummary) {}
    // GetClusterStats Retrieve statistics on cluster with respect to platform resources
    rpc GetClusterStats (ClusterStatsRequest) returns (ClusterStats) {}
    // Query Execute a query directly on the monitoring storage backend
    rpc Query (QueryRequest) returns (QueryResponse) {}
    // GetOrganizationApplicationStats Retrieve an aggregation of the service instances of an organization.
    rpc GetOrganizationApplicationStats (OrganizationApplicationStatsRequest) returns (OrganizationApplicationStatsResponse) {}
}

// MetricsCollector Client services for quering monitoring information on a specific cluster
// The request messages are reused from the Coordinator. The organization ID
// and cluster ID can either be blank, or must match the current cluster.
service MetricsCollector {
    // GetClusterSummary Retrieve a summary of high level cluster resource availability
    rpc GetClusterSummary (ClusterSummaryRequest) returns (ClusterSummary) {}
    // GetClusterStats Retrieve statistics on cluster with respect to platform resources
    rpc GetClusterStats (ClusterStatsRequest) returns (ClusterStats) {}
    // Query Execute a query directly on the monitoring storage backend
    rpc Query (QueryRequest) returns (QueryResponse) {}
    // GetContainerStats Retrieve the stats of the service containers in the cluster.
    rpc GetContainerStats (common.Empty) returns (ContainerStatsResponse) {}
}

// AssetMonitoring Asset Monitoring related operations - collecting metrics from Edge Controller
service AssetMonitoring {
    // ListMetrics List available metrics for a specific Edge Controller or
    // asset selector
    rpc ListMetrics (inventory.AssetSelector) returns (MetricsList) {}
    // QueryMetrics Query monitoring metrics
    rpc QueryMetrics (QueryMetricsRequest) returns (QueryMetricsResult) {}
}

service MonitoringApi {
    rpc Metrics (OrganizationApplicationStatsRequest) returns (google.api.HttpBody) {
        option (google.api.http) = {
            get: "/metrics/{organization_id}"
        };
    }
}
