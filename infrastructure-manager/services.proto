/*
 * Copyright (C) 2018 Nalej - All Rights Reserved
 */

syntax = "proto3";

package infrastructure_manager;
option go_package = "github.com/nalej/grpc-infrastructure-manager-go";

import "common/entities.proto";
import "infrastructure/entities.proto";
import "organization/entities.proto";

// Infrastructure Manager service
service InfrastructureManager {
    // AddCluster adds a new cluster to the system.
    rpc AddCluster(infrastructure.AddClusterRequest) returns (infrastructure.Cluster) {}
    // GetCluster retrieves the cluster information.
    rpc GetCluster(infrastructure.ClusterId) returns (infrastructure.Cluster) {}
    // ListClusters obtains a list of the clusters in the organization.
    rpc ListClusters(organization.OrganizationId) returns (infrastructure.ClusterList) {}
    // DrainCluster reschedules the services deployed in a given cluster.
    rpc DrainCluster(infrastructure.ClusterId) returns (common.Success){}
    // CordonCluster blocks the deployment of new services in a given cluster.
    rpc CordonCluster(infrastructure.ClusterId) returns (common.Success){}
    // RemoveCluster removes a cluster from an organization. Notice that removing a cluster implies draining the cluster
    // of running applications.
    rpc RemoveCluster(infrastructure.RemoveClusterRequest) returns (common.Success) {}
    // AddNode adds a new node to the system.
    rpc AddNode(infrastructure.AddNodeRequest) returns (infrastructure.Node) {}
    // AttachNode links a node with a given cluster.
    rpc AttachNode(infrastructure.AttachNodeRequest) returns (common.Success) {}
    // ListNodes obtains a list of nodes in a cluster.
    rpc ListNodes(infrastructure.ClusterId) returns (infrastructure.NodeList) {}
    // RemoveNodes removes a set of nodes from the system.
    rpc RemoveNodes(infrastructure.RemoveNodesRequest) returns (common.Success) {}
}
