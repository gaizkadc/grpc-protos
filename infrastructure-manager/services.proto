/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package infrastructure_manager;
option go_package = "github.com/nalej/grpc-infrastructure-manager-go";

import "common/entities.proto";
import "infrastructure/entities.proto";
import "organization/entities.proto";
import "installer/entities.proto";
import "provisioner/entities.proto";
import "infrastructure-manager/entities.proto";

// Infrastructure Manager service
service InfrastructureManager {
    // Install a new cluster adding it to the system.
    rpc InstallCluster(installer.InstallRequest) returns (infrastructure_manager.InstallResponse){}
    // Provision and install a new cluster adding it to the system.
    rpc ProvisionAndInstallCluster(provisioner.ProvisionClusterRequest) returns (infrastructure_manager.ProvisionerResponse){}
    // GetCluster retrieves the cluster information.
    rpc GetCluster(infrastructure.ClusterId) returns (infrastructure.Cluster) {}
    // ListClusters obtains a list of the clusters in the organization.
    rpc ListClusters(organization.OrganizationId) returns (infrastructure.ClusterList) {}
    // UpdateCluster allows the user to update the information of a cluster.
    rpc UpdateCluster(infrastructure.UpdateClusterRequest) returns (infrastructure.Cluster){}
    // RemoveCluster removes a cluster from an organization. Notice that removing a cluster implies draining the cluster
    // of running applications.
    rpc RemoveCluster(infrastructure.RemoveClusterRequest) returns (common.Success) {}
    // UpdateNode allows the user to update the information of a node.
    rpc UpdateNode(infrastructure.UpdateNodeRequest) returns (infrastructure.Node) {}
    // ListNodes obtains a list of nodes in a cluster.
    rpc ListNodes(infrastructure.ClusterId) returns (infrastructure.NodeList) {}
    // Cordon a cluster. The cluster will not accept any new application deployment request.
    rpc CordonCluster(infrastructure.ClusterId) returns (common.Success) {}
    // Uncordon a cluster. The cordon flag will be disabled for this cluster.
    rpc UncordonCluster(infrastructure.ClusterId) returns (common.Success) {}
    // Drain a cluster.
    rpc DrainCluster(infrastructure.ClusterId) returns (common.Success) {}
}
