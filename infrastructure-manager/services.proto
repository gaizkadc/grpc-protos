/*
 * Copyright (C) 2018 Nalej - All Rights Reserved
 */

syntax = "proto3";

package infrastructure_manager;
option go_package = "github.com/nalej/grpc-infrastructure-manager-go";

import "common/entities.proto";
import "infrastructure/entities.proto";
import "organization/entities.proto";
import "installer/entities.proto";
import "infrastructure-manager/entities.proto";

// Infrastructure Manager service
service InfrastructureManager {
    // Install a new cluster adding it to the system.
    rpc InstallCluster(installer.InstallRequest) returns (infrastructure_manager.InstallResponse){}
    // GetCluster retrieves the cluster information.
    rpc GetCluster(infrastructure.ClusterId) returns (infrastructure.Cluster) {}
    // ListClusters obtains a list of the clusters in the organization.
    rpc ListClusters(organization.OrganizationId) returns (infrastructure.ClusterList) {}
    // DrainCluster reschedules the services deployed in a given cluster.
    rpc DrainCluster(infrastructure.ClusterId) returns (common.Success){}
    // CordonCluster blocks the deployment of new services in a given cluster.
    rpc CordonCluster(infrastructure.ClusterId) returns (common.Success){}
    // RemoveCluster removes a cluster from an organization. Notice that removing a cluster implies draining the cluster
    // of running applications.
    rpc RemoveCluster(infrastructure.RemoveClusterRequest) returns (common.Success) {}
    // ListNodes obtains a list of nodes in a cluster.
    rpc ListNodes(infrastructure.ClusterId) returns (infrastructure.NodeList) {}
}
