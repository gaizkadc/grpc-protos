/*
 * Copyright (C) 2018 Nalej Group - All Rights Reserved
 */


syntax = "proto3";

package deployment_manager;
option go_package = "github.com/nalej/grpc-deployment-manager-go";

import "conductor/entities.proto";
import "application/entities.proto";

enum RollbackPolicy {
    // No rollback executed
    NONE = 0;
    // Constant retrial
    ALWAYS_RETRY = 1;
    // Limited retries
    LIMITED_RETRY = 2;
}


message DeploymentFragmentRequest {
    string request_id = 1;
    // Plan to be deployed
    conductor.DeploymentFragment fragment = 2;
    // Zero-tier network id
    string zt_network_id = 3;
    // Rollback policy
    RollbackPolicy rollback_policy = 4;
}

message DeploymentFragmentResponse {
    string request_id = 1;
    //status summary
    application.ApplicationStatus status = 2;
}

// --------------------------
// DeploymentManager Network services

message UndeployRequest {
    // request id
    string request_id = 1;
    // organization
    string organization_id = 2;
    // application
    string app_instance_id = 3;
}

// Message to authorize a member in an existing network
message AuthorizeNetworkMembershipRequest {
    // organization id
    string organization_id = 1;
    // Application instance
    string app_instance_id = 2;
    // Id of the plan this fragment belongs to
    string deployment_id = 3;
    // Id of this fragment
    string fragment_id = 4;
    // Network to join
    string network_id = 5;
    // Member id
    string member_id = 6;
}

// Message to register a new network entry
message RegisterNetworkEntryRequest {
    // Organization id
    string organization_id = 1;
    // Application instance
    string app_instance_id = 2;
    // Instance hostname
    string hostname = 3;
    // Service name
    string service_name = 4;
    // Service IP
    string service_ip = 5;
    // Network id
    string network_id = 6;
}
