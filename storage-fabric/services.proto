/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package storage_fabric;
option go_package = "github.com/nalej/grpc-storage-fabric-go";

import "storage-fabric/entities.proto";
import "common/entities.proto";

// Coordinator service with the operations offered by the query coordinator.
service StorageClass {
    // Create a new storage class in the storage fabric. A storage class is associated with
    // a given application service instance to offer higher granularity and isolation.
    rpc Create(CreateStorageClassRequest) returns (common.Success) {}
    // Update an existing storage class (e.g., replication factor).
    rpc Update(UpdateStorageClassRequest) returns (common.Success) {}
    // Remove a storage class. This operation will delete all persistent data.
    rpc Remove(StorageClass) returns (common.Success) {}
    // Stats returns general statistics on a storage class.
    rpc Stats(StorageClass) returns (StorageClassStats) {}
}
