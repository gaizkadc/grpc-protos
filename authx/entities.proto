/*
 * Copyright (C) 2018 Nalej - All Rights Reserved
 */

syntax = "proto3";

package authx;
option go_package = "github.com/nalej/grpc-authx-go";

// AccessPrimitives define a set of capabilities a role may access.
enum AccessPrimitive {
    // Access to all organization related functionality.
    ORG = 0;
    // Access to all applications related functionality.
    APPS = 1;
    // Access to all resources related functionality.
    RESOURCES = 2;
    // Access to the profile information.
    PROFILE = 3;
    // Access to operations performed by application clusters.
    APPCLUSTEROPS = 4;
}

// Role defines a role for users of an organization with the associated capabilities
message Role {
    string organization_id = 1;
    string role_id = 2;
    string name = 3;
    bool internal = 4;
    repeated AccessPrimitive primitives = 5;
}

message RoleList {
    repeated Role roles = 1;
}

// RoleId is the identificator of the role.
message RoleId {
    string organization_id = 1;
    string role_id = 2;
}

// AddBasicCredentialRequest is the message that add new credential using login and password.
message AddBasicCredentialRequest {
    string organization_id = 1;
    string username = 2;
    string password = 3;
    string role_id = 4;
}

// LoginWithBasicCredentialsRequest is the request for login with basic credentials.
message LoginWithBasicCredentialsRequest {
    string username = 1;
    string password = 2;
}

// LoginResponse is the message that contains the generated token and the refresh token.
message LoginResponse {
    string token = 1;
    string refresh_token = 2;
}

// RefreshTokenRequest is the request for refreshing the generated token.
message RefreshTokenRequest {
    string token = 1;
    string refresh_token = 2;
}

// Message for editing a user role.
message EditUserRoleRequest {
    string username = 1;
    string new_role_id = 2;
}

// Message for change the user password.
message ChangePasswordRequest {
    string username = 1;
    string password = 2;
    string newPassword = 3;
}

message DeleteCredentialsRequest {
    string username = 1;
}

// Messages for device credentials
message DeviceCredentials {
    string organization_id = 1;
    string device_group_id = 2;
    string device_id = 3;
    // Enabled determines if the device can interact with the running applications.
    bool enabled = 4;
    // DeviceApiKey contains the API KEY used by the device to send data.
    string device_api_key = 5;
}


// AddDeviceCredentialsRequest is the request for add a new device credential
message AddDeviceCredentialsRequest {
    string organization_id = 1;
    string device_group_id = 2;
    string device_id = 3;
}

// UpdateDeviceCredentialsRequest is the message to Enable/disable the device
message UpdateDeviceCredentialsRequest {
    string organization_id = 1;
    string device_group_id = 2;
    string device_id = 3;
    bool enabled = 4;
}

// Messages for device Group
message DeviceGroupCredentials {
    string organization_id = 1;
    string device_group_id = 2;
    // Enabled determines if the device can interact with the running applications.
    bool enabled = 3;
    // DefaultDeviceConnectivity determines if the devices are enable or disable by default
    bool default_device_connectivity = 4;
    // DeviceGroupApiKey with the API used by the devices associated to this group for registration purposes.
    string device_group_api_key = 5;
}


// AddDeviceGroupCredentialsRequest, message for add a new device group credential
message AddDeviceGroupCredentialsRequest {
    string organization_id = 1;
    string device_group_id = 2;
    // Enabled determines if this group is able to interact with the running applications.
    bool enabled = 3;
    bool default_device_connectivity = 4;
}

// UpdateDeviceGroupCredentialsRequest, message to enable/disable the device group
message UpdateDeviceGroupCredentialsRequest {
    string organization_id = 1;
    string device_group_id = 2;
    bool update_enabled = 3;
    bool enabled = 4;
    bool update_device_connectivity = 5;
    bool default_device_connectivity = 6;
}

// DeviceGroupLoginRequest, message to login a group
message DeviceGroupLoginRequest {
    string organization_id = 1;
    string device_group_api_key = 2;

}

// DeviceLoginRequest, message to login a device
message DeviceLoginRequest {
    string organization_id = 1;
    string device_api_key = 2;

}