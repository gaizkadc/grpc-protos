/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package device_login_api;
option go_package = "github.com/nalej/grpc-device-login-api-go";

import "authx/entities.proto";
import "device-manager/entities.proto";
import "google/api/annotations.proto";

// Login operations.
service Login {
    // DeviceLogin checks the device API Key and whether the device is enabled to create a JWT token.
    rpc DeviceLogin(authx.DeviceLoginRequest) returns(authx.LoginResponse){
        option (google.api.http) = {
            post: "/v1/login"
            body: "*"
        };
    }
}

// Register operations
service Register {
    // RegisterDevice registers a new device in a given device group.
    rpc RegisterDevice(device_manager.RegisterDeviceRequest) returns(device_manager.RegisterResponse){
        option (google.api.http) = {
            post: "/v1/register/device"
            body: "*"
        };
    }
}

