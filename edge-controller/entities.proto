/*
 * Copyright (C) 2019 Nalej - All Rights Reserved
 */

syntax = "proto3";

package edge_controller;
option go_package = "github.com/nalej/grpc-edge-controller-go";

import "inventory-manager/entities.proto";
import "inventory/entities.proto";

// Agents

// AgentJoinRequest send by an agent to an EIC to join the platform.
message AgentJoinRequest{
    // AgentId with the agent identifier that is monitoring this asset if any. This Id is generated by the
    // agent itself.
    string agent_id = 1;
    // Labels defined by the user.
    map<string, string> labels = 2;
    // OS contains Operating System information.
    inventory.OperatingSystemInfo os = 3;
    // Hardware information.
    inventory.HardwareInfo hardware = 4;
    // Storage information.
    repeated inventory.StorageHardwareInfo storage = 5;
    // Geolocation with the agent geolocation
    string geolocation = 6;
}


// AgentCheckRequest contains heartbeat and any plugin-specific data
message AgentCheckRequest{
    // AssetId is the identifier assigned to this asset by the platform. Note
    // that this is different from the AgentId, which is generated by the agent.
    string asset_id = 1;
    // Timestamp is used by the Edge Controller to check if the clock
    // of the Agent system is still in sync
    int64 timestamp = 2;
    // PluginData is any data plugins want to tag on to the heartbeat
    repeated PluginData plugin_data = 3;
}

// CheckResult message with the pending request if any that an agent needs to execute.
message CheckResult{
    repeated inventory_manager.AgentOpRequest pending_requests = 1;
}

//
// Plugin-specific data definitions
//

// Plugin lists all Agent plugins that send messages and thus have a
// corresponding Edge Controller plugin
enum Plugin {
    METRICS = 0;
}

// PluginData contains plugin-specific data for a single plugin
message PluginData{
    // What plugin this data relates to. Having this as a separate
    // field makes it easier to route the data to the correct plugin
    Plugin plugin = 1;

    // The plugin-specific data
    oneof data {
        MetricsPluginData metrics_data = 16;
    }
}

// Metrics data
message MetricsPluginData {
    // Timestamp for the data points
    int64 timestamp = 1;

    // Single metric
    message Metric {
        // Metric name
        string name = 1;
	// Map of metric attributes
	map<string, string> tags = 2;
	// Metric values
	map<string, uint64> fields = 3;
    }

    // All metrics for this heartbeat
    repeated Metric metrics = 2;
}
