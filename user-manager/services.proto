/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package user_manager;
option go_package = "github.com/nalej/grpc-user-manager-go";

import "common/entities.proto";
import "user/entities.proto";
import "authx/entities.proto";
import "user-manager/entities.proto";
import "organization/entities.proto";

// Users service with operations related to user and role creation.
service UserManager {
    // AddUser adds a new user to an organization.
    rpc AddUser(user_manager.AddUserRequest) returns (user_manager.User){}
    // GetUser retrieves the information of a user including role information.
    rpc GetUser(user.UserId) returns (user_manager.User){}
    // RemoveUser removes a given user from the system.
    rpc RemoveUser(user.UserId) returns (common.Success){}
    // ListUsers retrieves a list of users associated with an organization.
    rpc ListUsers (organization.OrganizationId) returns (user_manager.UserList){}
    // Update the user information.
    rpc Update(user.UpdateUserRequest) returns (common.Success) {}
    // ChangePassword updates the password of a user.
    rpc ChangePassword (ChangePasswordRequest) returns (common.Success) {}
    // AddRole adds a new role to an organization.
    rpc AddRole(AddRoleRequest) returns (authx.Role){}
    // TODO RemoveRole removes a role from an organization.
    // rpc RemoveRole(authx.RoleId) returns (common.Success){}
    // AssignRole assigns a role to an existing user.
    rpc AssignRole(AssignRoleRequest) returns (user_manager.User){}
    // ListRoles obtains a list of roles in an organization.
    rpc ListRoles(organization.OrganizationId) returns (authx.RoleList){}
}
