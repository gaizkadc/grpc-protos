/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package infrastructure;
option go_package = "github.com/nalej/grpc-infrastructure-go";

import "common/entities.proto";
import "infrastructure/entities.proto";
import "organization/entities.proto";

// Clusters management service.
service Clusters {
    // AddCluster adds a new cluster to the system.
    rpc AddCluster(AddClusterRequest) returns (Cluster) {}
    // GetCluster retrieves the cluster information.
    rpc GetCluster(ClusterId) returns (Cluster) {}
    // UpdateCluster updates the information of a cluster.
    rpc UpdateCluster(UpdateClusterRequest) returns (Cluster) {}
    // ListClusters obtains a list of the clusters in the organization.
    rpc ListClusters(organization.OrganizationId) returns (ClusterList) {}
    // RemoveCluster removes a cluster from an organization. Notice that removing a cluster implies draining the cluster
    // of running applications.
    rpc RemoveCluster(RemoveClusterRequest) returns (common.Success) {}
    // Cordon a cluster. The cluster will not accept any new application deployment request.
    rpc CordonCluster(ClusterId) returns (common.Success) {}
    // Uncordon a cluster. The cordon flag will be disabled for this cluster.
    rpc UncordonCluster(ClusterId) returns (common.Success) {}
}

// Nodes management service.
service Nodes {
    // AddNode adds a new node to the system.
    rpc AddNode(AddNodeRequest) returns (Node) {}
    // AttachNode links a node with a given cluster.
    rpc AttachNode(AttachNodeRequest) returns (common.Success) {}
    // UpdateNode updates the information of a node.
    rpc UpdateNode(UpdateNodeRequest) returns (Node){}
    // ListNodes obtains a list of nodes in a cluster.
    rpc ListNodes(ClusterId) returns (NodeList) {}
    // RemoveNodes removes a set of nodes from the system.
    rpc RemoveNodes(RemoveNodesRequest) returns (common.Success) {}
}
