/*
 * Copyright 2019 Nalej
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package connectivity_manager;
option go_package = "github.com/nalej/grpc-connectivity-manager-go";

// Message to check whether a cluster is alive or not
message ClusterAlive {
    // Organization id
    string organization_id = 1;
    // Cluster id
    string cluster_id = 2;
    // Timestamp
    int64 timestamp = 3;
}

// ClusterStatus defines a set of status of a cluster
enum ClusterStatus {
    // Initial status of a cluster
    UNKNOWN = 0;
    // A cluster didn't send an alive signal for the threshold period
    OFFLINE = 1;
    // A cluster is working normally
    ONLINE = 2;
    // A cluster's grace period expired and is now
    OFFLINE_CORDON = 3;
    // A cluster is alive but the user sent a cordon request
    ONLINE_CORDON = 4;
}

// OfflinePolicy defines a set of policies to be triggered when a cluster is Offline or OfflineCordon
enum OfflinePolicy {
    // No policy is triggered
    NONE = 0;
    // Drain cluster
    DRAIN = 1;
}